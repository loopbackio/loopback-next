// Copyright IBM Corp. 2021. All Rights Reserved.
// Node module: @loopback/graphql
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT

import {expect, TestSandbox} from '@loopback/testlab';
import fs from 'fs';
import path from 'path';
import {GraphQLServer} from '../..';
import {RecipeResolver} from '../fixtures/graphql-resolvers/recipe/recipe.resolver';

const sandbox = new TestSandbox(path.resolve(__dirname, '../../../.sandbox'));

const EXPECTED_SPEC = `# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Mutation {
  addRecipe(recipe: RecipeInput!): Recipe!
}

type Query {
  recipes: [Recipe!]!
}

"""Object representing cooking recipe"""
type Recipe {
  id: ID!
  lowercaseTitle: String!
  title: String!
}

input RecipeInput {
  description: String
  ingredients: [String!]!
  title: String!
}
`;

describe('emitGraphQLSchemaFile', () => {
  describe('using standalone GraphQLServer', () => {
    let server: GraphQLServer;

    beforeEach(async () => {
      givenServer();
      server.resolver(RecipeResolver);
    });
    function givenServer() {
      server = new GraphQLServer({
        emitSchemaFile: path.join(sandbox.path, 'test-file.gql'),
      });
    }
    it('renders the expected spec to stdout', async () => {
      await server.start();
      const file = path.join(sandbox.path, 'test-file.gql');
      const content = fs.readFileSync(file, 'utf-8');
      expect(content).to.eql(EXPECTED_SPEC);
    });
  });
});
